name: IIS DSX Import Pipeline

on:
  push:
    branches: [ dev, uat, sit, perf, prod ]

jobs:
  debug-info:
    runs-on: self-hosted
    environment: ${{ github.ref_name }}
    steps:
      - name: Debug self-hosted runner info
        run: |
          echo "Current user: $(whoami)"
          echo "Home directory: $HOME"
          echo "Working directory: $PWD"
          echo "Runner OS: $RUNNER_OS"
          echo "GitHub workspace: $GITHUB_WORKSPACE"
          echo "System information:"
          uname -a

  prepare-artifacts:
    needs: debug-info
    runs-on: self-hosted
    environment: ${{ github.ref_name }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}
          
      - name: Copy DSX file to artifact directory
        run: |
          mkdir -p artifacts
          cp IIS/ds_package/*.dsx artifacts/

      - name: Upload DSX as artifact
        uses: actions/upload-artifact@v4
        with:
          name: dsx-package
          path: artifacts/*.dsx
          retention-days: 30

  copy-to-remote:
    needs: prepare-artifacts
    runs-on: self-hosted
    environment: ${{ github.ref_name }}
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: dsx-package
          path: artifacts

      - name: Copy files to remote server
        run: |
          echo "Setting up SSH directory and key..."
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          
          echo "Checking source files before upload..."
          ls -l artifacts/*.dsx
          
          echo "Attempting to copy files to remote server..."
          scp -v -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no artifacts/*.dsx root@${{ secrets.SERVER_HOST }}:/tmp/DSBuild/
          
          echo "Verifying files on remote server..."
          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no root@${{ secrets.SERVER_HOST }} "ls -l /tmp/DSBuild/*.dsx"
          
          echo "Cleaning up SSH key..."
          rm -f ~/.ssh/id_rsa
          echo "File transfer process completed"

  setup-remote:
    needs: copy-to-remote
    runs-on: self-hosted
    environment: ${{ github.ref_name }}
    steps:
      - name: executing remote ssh commands using password
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: root
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.PORT }}
          script: |
              source ~/.bash_profile
              cd /tmp/DSBuild
              export IIS_DSX_PACKAGE=$(ls /tmp/DSBuild/*.dsx)
              IIS_ISADMIN_DIR="/opt/IBM/InformationServer/ASBNode/bin"
              cd ${IIS_ISADMIN_DIR}
              echo "Importing the DS Job on the ${{ github.ref_name }} Environment"
              sudo ./DSXImportService.sh -ISHost ${{ vars.IS_HOSTNAME }}:9446 -ISUser ${{ secrets.IS_USERNAME }} -ISPassword ${{ secrets.IS_PASSWORD }} -DSProject ${{ vars.IS_PROJECT_NAME }} -DSXFile "${IIS_DSX_PACKAGE}" -Overwrite >> /tmp/DSBuild/job.log  2>&1
              cat /tmp/DSBuild/job.log
              cd /tmp/
              rm -rf DSBuild
