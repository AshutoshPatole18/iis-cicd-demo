name: IIS DSX Import Pipeline

on:
  push:
    branches: [ dev, uat, sit, perf, prod ]

jobs:
  build:
    runs-on: self-hosted
    environment: ${{ github.ref_name }}
    steps:
      - name: Debug self-hosted runner info
        run: |
          echo "Current user: $(whoami)"
          echo "Home directory: $HOME"
          echo "Working directory: $PWD"
          echo "Runner OS: $RUNNER_OS"
          echo "GitHub workspace: $GITHUB_WORKSPACE"
          echo "System information:"
          uname -a
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}
          
      - name: Copy DSX file to artifact directory
        run: |
          mkdir -p artifacts
          cp IIS/ds_package/*.dsx artifacts/

      - name: Upload DSX as artifact
        uses: actions/upload-artifact@v4
        with:
          name: dsx-package
          path: artifacts/*.dsx
          retention-days: 30

      - name: Copy files to remote server
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          scp -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no artifacts/*.dsx root@${{ secrets.SERVER_HOST }}:/tmp/DSBuild/
          rm -f ~/.ssh/id_rsa

      - name: executing remote ssh commands using password
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: root
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.PORT }}
          script: |
            whoami
            hostname -f
            mkdir -pv /tmp/DSBuild
